Link --> https://www.interviewbit.com/problems/pick-from-both-sides/

Approach --> Use Concept of Prefix ArraySum and Suffix ArraySum

public class Solution {
    public int solve(ArrayList<Integer> A, int B) {

        // Brute Force Method
        // int max = -1000000000;
        // fo  r(int i=B;i>=0;i--){
        //     int sum = 0;
        //     for(int j=0;j<i;j++){
        //         sum+=A.get(j);
        //     }
        //     for(int k=A.size()-(B-i);k<A.size();k++){
        //         sum+=A.get(k);
        //     }
        //     max = Math.max(sum,max);
        // }
        // return max;
        int max = -1000000000;
        int prefixArray[] = new int[A.size()];
        int suffixArray[] = new int[A.size()];
        for(int i=0,j=A.size()-1;i<A.size();i++,j--){
            
            if(i==0 && j==A.size()-1){
               prefixArray[i] = A.get(i);
               suffixArray[j] = A.get(j);   
            }else{
               prefixArray[i] = prefixArray[i-1] + A.get(i);
               suffixArray[j] = suffixArray[j+1] + A.get(j);
            }
        }
        for(int i=B;i>=0;i--){
            if(i==B){
              max = Math.max(max,prefixArray[i-1]);
            }
            else if(i==0){
               max = Math.max(max,suffixArray[A.size()-B+i]); 
            }

            else{
                 max = Math.max(max,prefixArray[i-1]+suffixArray[A.size()-B+i]);
            }


        }
        return max;
    }
}