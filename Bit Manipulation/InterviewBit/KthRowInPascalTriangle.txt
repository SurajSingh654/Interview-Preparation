Link --> https://www.interviewbit.com/problems/kth-row-of-pascals-triangle/

Question --> Given an index k, return the kth row of the Pascal's triangle.
Pascal's triangle: To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1.

Example:

Input : k = 3


Return : [1,3,3,1]

Approach --> To get each element of pascal row , we have to find nCr value for each element ... To find nCr use the concept of GCD also ...

Solution 

public class Solution {

    long gcd(int a,int b){
        if(b==0){
            return a;
        }

        return gcd(b,a%b);
    }
    int nCr(int n,int r){
        int numerator = 1;
        int denominator = 1;
        if(n-r<r){
            r = n-r;
        }
        if(r!=0){
            while(r>0){
                numerator*=n;
                denominator*=r;
                long GCD;
                if(numerator>denominator){
                  GCD = gcd(numerator,denominator);
                }
                else if(numerator<denominator){
                  GCD = gcd(denominator,numerator);
                }else{
                    GCD = numerator;
                }

                numerator/=GCD;
                denominator/=GCD;  
                n--;
                r--; 
            }
        }else{
            numerator = 1;
        }

        return numerator;
    }
    public ArrayList<Integer> getRow(int A) {
        ArrayList<Integer> list = new ArrayList<Integer>();
        int n = A;
        for(int r=0;r<=A;r++){
             list.add(nCr(n,r));
        }
        return list;
    }
}
