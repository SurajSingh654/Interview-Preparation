 --> GCD(a,b) = GCD(a-b,b) where a>b
 --> GCD(a,b) = GCD(b,a%b) where a>b
 --> a^b ==>{
              a*a^{b-1}   , if b&1!=0
              (a^2)*a^b/2  , if b&1===0
          }

 --> {a+b}%n => (a%n + b%n)%n;  same for { - and * }

 --> (a / b) % m = (a * (inverse of b if exists)) % m

 --> The modular inverse of a mod m exists only if a and m are relatively prime i.e. gcd(a, m) = 1.
Hence, for finding inverse of a under modulo m,
if (a x b) mod m = 1 then b is modular inverse of a.
Example:
a = 5, m = 7
(5 x 3) % 7 = 1
hence, 3 is modulo inverse of 5 under 7.

 --> Josephus Problem : f(n,k) = (f(n-1,k)+k)%n; {If index start from 0}

 --> String is palindrome : Use recursion , check 0th and last index if they are equal call same fn for index 1 to length-1


 --> Set  = [a,b,c]
power_set_size = pow(2, 3) = 8
Run for binary counter = 000 to 111

Value of Counter            Subset
   000                    -> Empty set
   001                    -> a
   010                    -> b
   011                    -> ab
   100                    -> c
   101                    -> ac
   110                    -> bc
   111                    -> abc


--> When question is saying to use space mostly their hashmap or memoization is used!
