Link --> https://leetcode.com/problems/projection-area-of-3d-shapes/

Question --> You are given an n x n grid where we place some 1 x 1 x 1 cubes that are axis-aligned with the x, y, and z axes.

Each value v = grid[i][j] represents a tower of v cubes placed on top of the cell (i, j).

We view the projection of these cubes onto the xy, yz, and zx planes.

A projection is like a shadow, that maps our 3-dimensional figure to a 2-dimensional plane. We are viewing the "shadow" when looking at the cubes from the top, the front, and the side.

Return the total area of all three projections


Approach --> Sum of total Non-Zero ELements, Max in Each Row, Max in Each Column ...

Solution! 

class Solution {
    public int projectionArea(int[][] grid) {
        int totalNonZeroElements = 0;
        int[] rowMax = new int[grid[0].length];
        int[] columnMax = new int[grid[0].length];
        int totalSum = 0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]!=0){
                    totalNonZeroElements++;
                }
                rowMax[i] = Math.max(rowMax[i],grid[i][j]);
                columnMax[i] = Math.max(columnMax[i],grid[j][i]);
            }
            totalSum+=(rowMax[i]+columnMax[i]);
        }
        totalSum+=(totalNonZeroElements);
        return totalSum;
    }
}