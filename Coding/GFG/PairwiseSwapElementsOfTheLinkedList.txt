Link --> https://practice.geeksforgeeks.org/problems/pairwise-swap-elements-of-a-linked-list-by-swapping-data/1#

Question --> Given a singly linked list of size N. The task is to swap elements in the linked list pairwise.
For example, if the input list is 1 2 3 4, the resulting list after swaps will be 2 1 4 3.
Note: You need to swap the nodes, not only the data. If only data is swapped then driver will print -1.

Approach --> take three pointers prev,curr, and next . Put address of previous in current.next and adress of next.next in previous.next {if next.next == null then, address of next in previous.next}

Solution!

class Solution {
    // Function to pairwise swap elements of a linked list.
    // It should returns head of the modified list
    public Node pairwiseSwap(Node head)
    {
        // code here
        if(head==null||head.next==null){
            return head;
        }
        
        Node prev = head;
        Node curr = head.next;
        
        head = curr;
        while(true){
            Node next = curr.next;
            
            // current node -> previous node
            curr.next = prev;
            
             // If next NULL or next is the last node
            if (next == null || next.next == null) {
                prev.next = next;
                break;
            }
              
            // Change next of previous to next next
            prev.next = next.next;
 
            // Update previous and curr
            prev = next;
            curr = prev.next;
        }
        return head;
    }
}