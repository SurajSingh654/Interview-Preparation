Approach --> We know that hexadecimal number uses 16 symbols {0, 1, 2, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F} to represent all numbers. Here, (A, B, C, D, E, F) represents (10, 11, 12, 13, 14, 15). 

The idea is to extract the digits of a given hexadecimal number starting from the rightmost digit and keep a variable dec_value. At the time of extracting digits from the hexadecimal number, multiply the digit with the proper base (Power of 16) and add it to the variable dec_value. In the end, the variable dec_value will store the required decimal number.

For Example: If the hexadecimal number is 1A. 
dec_value = 1*(16^1) + 10*(16^0) = 26


// Java program to convert hexadecimal to decimal
import java.io.*;

class GFG {
	// Function to convert hexadecimal to decimal
	static int hexadecimalToDecimal(String hexVal)
	{
		int len = hexVal.length();

		// Initializing base value to 1, i.e 16^0
		int base = 1;

		int dec_val = 0;

		// Extracting characters as digits from last
		// character
		for (int i = len - 1; i >= 0; i--) {
			// if character lies in '0'-'9', converting
			// it to integral 0-9 by subtracting 48 from
			// ASCII value
			if (hexVal.charAt(i) >= '0'
				&& hexVal.charAt(i) <= '9') {
				dec_val += (hexVal.charAt(i) - 48) * base;

				// incrementing base by power
				base = base * 16;
			}

			// if character lies in 'A'-'F' , converting
			// it to integral 10 - 15 by subtracting 55
			// from ASCII value
			else if (hexVal.charAt(i) >= 'A'
					&& hexVal.charAt(i) <= 'F') {
				dec_val += (hexVal.charAt(i) - 55) * base;

				// incrementing base by power
				base = base * 16;
			}
		}
		return dec_val;
	}

	// driver program
	public static void main(String[] args)
	{
		String hexNum = "1A";
		System.out.println(hexadecimalToDecimal(hexNum));
	}
}
