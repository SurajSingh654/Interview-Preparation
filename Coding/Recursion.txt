Pros --> Reduces Complex loops, reduce time-complexity with memoization
Cons --> Slowness due to CPU overhead , stack-overflow exception, 

Why is call stack important for recursion?
The call stack is at the heart of this recursive functionâ€”and all functions, TBH. The call stack keeps track of function calls. It's a list of all the functions currently running at that that point in the program

Stack Frame --> The program creates a new stack frame whenever it calls a function; so, when it calls a function recursively, it creates a new stack frame for each call, leaving the previous stack frames intact.

 Stack Frame Link --> https://www.prodevelopertutorial.com/introduction-to-recursion-with-stack-frame-and-recursion-tree/


 Stack Trace --> A stack trace is a report of the active stack frames at a certain point in time during the execution of a program. In other words, the call stack is the actual data structure in memory, while the stack trace is a snapshot of said data structure.