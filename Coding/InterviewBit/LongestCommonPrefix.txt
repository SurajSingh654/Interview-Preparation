Link --> https://www.interviewbit.com/problems/longest-common-prefix/

Question --> Given the array of strings A, you need to find the longest string S which is the prefix of ALL the strings in the array.

Longest common prefix for a pair of strings S1 and S2 is the longest string S which is the prefix of both S1 and S2.

For Example: longest common prefix of "abcdefgh" and "abcefgh" is "abc".

Approach --> Select smallest string and take its first character and matches with all remaining strings corrensponding character ... if all the strings have same character check for second character appned it in res{empty string} variable and so on ... if any of the character is not equal then return immediately ...






Solution:

public class Solution {
	public String longestCommonPrefix(ArrayList<String> A) {
	    
	    if (A.size() == 0)
	        return "";
	        
	    String str;
	    String res = "";
	    int min = Integer.MAX_VALUE;
	    
	    for (int i = 0; i < A.size(); i++) {
	        min = Math.min(min, A.get(i).length());
	    }
	    
	    for (int i = 0; i < min; i++) {
	        
	        char c = A.get(0).charAt(i);
	        
	        for (int j = 1; j < A.size(); j++) {
	            
	            if (c != A.get(j).charAt(i))
	                return res;
	                
	        }
	        
	        res += c;
	        
	    }
	    
	    return res;
	    
	}
}

