
Link --> https://www.interviewbit.com/problems/character-frequencies/

Question --> Given a string A containing only lowercase characters.
Find the frequencies of the characters in order of their occurrence.


Problem Constraints
1 <= |A| <= 105

Approach1 --> Store all frequencies of element and also maintain their insertion order{Use Map}

Approach2 --> Create an array of 26 size ...store element frequencies at corresponding index ... Also create arrayList to maintain insertion order 




Solution1:
public class Solution {
    public ArrayList<Integer> solve(String A) {
        ArrayList<Integer> list = new ArrayList<Integer>();
        Map<Character,Integer> lm = new LinkedHashMap<Character,Integer>();
        for(int i=0;i<A.length();i++){
            lm.put(A.charAt(i),lm.getOrDefault(A.charAt(i),0)+1);
        }
        for(Map.Entry<Character,Integer> it :lm.entrySet()){
            list.add(it.getValue());
        }
        return list;
       
    }
}

Solution2{More Optimized and Fast}:

public class Solution {
    public ArrayList solve(String A) {
        ArrayList order = new ArrayList();
        int cnt[] = new int[26];
        for(int i = 0; i < A.length(); ++i){
            int k = A.charAt(i)-'a';
            if(cnt[k] == 0){
                order.add(k);
            }
            cnt[k]++;
        }
        ArrayList ans = new ArrayList();
        for(int x: order){
            ans.add(cnt[x]);
        }
        return ans;
    }
}
