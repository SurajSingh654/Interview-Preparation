Link --> https://www.interviewbit.com/problems/grid-unique-paths/

Question --> A robot is located at the top-left corner of an A x B grid (marked ‘Start’ in the diagram below).

Path Sum: Example 1

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked ‘Finish’ in the diagram below).

How many possible unique paths are there?

Note: A and B will be such that the resulting answer fits in a 32 bit signed integer.






Approach --> Use Recursion , return (topPath + leftPath), if you have no topPath/leftPath left  then return 1;

Another Approach --> There is a mathematical approach to solving this problem.

Note that you have to take m + n - 2 steps in total. You have to take (m - 1) steps going down and (n-1) steps going right.

Let 0 denote a down step and 1 denote a right step.

So we need to find out the number of strings of length m + n - 2 which have exactly m - 1 zeroes and n - 1 ones.

Essentially we need to choose the positions of ‘1s’, and then ‘0s’ fall into the remaining positions.

So, the answer becomes Choose(m+n-2, n - 1).

Solution!

public class Solution {
    public int uniquePaths(int A, int B) {
        if(A==1 || B==1){
            return 1;
        }

        return uniquePaths(A-1,B)+uniquePaths(A,B-1);
    }
}
