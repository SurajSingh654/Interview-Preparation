Link --> https://www.interviewbit.com/problems/pascal-triangle/

Question --> Given numRows, generate the first numRows of Pascal's triangle.
Pascal's triangle : To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1.

Approach --> For any element in pascal triangle use nCr = (n-1)C(r-1)+(n-1)Cr ...




Solution1{Using Recursion}

public class Solution {
    public int combination(int n,int r){
        if(n==0||n==1||r==n||r==0){
            return 1;
        }
        else{
            return combination(n-1,r-1)+combination(n-1,r);
        }
    }
    public ArrayList<ArrayList<Integer>> solve(int A) {
        ArrayList<ArrayList<Integer>> list = new ArrayList<>();
        for(int n=0;n<A;n++){
            ArrayList<Integer> tempList = new ArrayList<Integer>();
            for(int r=0;r<=n;r++){
               tempList.add(combination(n,r));
            }
            list.add(tempList);
        }
        return list;
    }
}

Solution2{Without Recursion}!

public class Solution {
    public ArrayList<ArrayList<Integer>> solve(int A) {
        ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
        
        for(int i = 0; i < A; i++){
            ArrayList <Integer> ar = new ArrayList<>();
            
            for(int j = 0; j <= i; j++){
                if(j == 0 || j == i){
                    ar.add(1);
                } else {
                    ar.add(ans.get(i - 1).get(j) + ans.get(i - 1).get(j - 1));
                }
            }
            ans.add(ar);
        }
        return ans;
    }
}



