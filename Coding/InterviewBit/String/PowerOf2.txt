Link: https://www.interviewbit.com/problems/power-of-2/

Question: Find if Given number is power of 2 or not. 

More specifically, find if given number can be expressed as 2^k where k >= 1.

Input:

number length can be more than 64, which mean number can be greater than 2 ^ 64 (out of long long range)



Approach: Below is the way by which we can decide whether the number is a power of 2 or not.

Loop until n not equal to 1 and also n is even :
        n divided by 2
IF n is equal to 1
        return 1
ELSE 
    return 0
However its very important to note here that we canâ€™t take n as an integer or a long long as n can be greater than 2^64.
Therefore we have to take the input as a string.
Lets see how we would implement division by 2.
The division process is just the simulation of human division process.
Start from the first digit. If the current digit is less than 2, then we append the next digit to current digit, and append 0 to our answer.

Solution: 1

import java.math.*;
public class Solution {
    public int power(String A) {
      if(A.equals("1"))
        return 0;
        BigInteger N = new BigInteger(A);
            if(N.bitCount()==1)
            return 1;
            else 
            return 0;
    }
}

Solution: 2

public class Solution {
	public int power(String A) {
	    
	    String dividend = A;
	    StringBuilder str;
	    
	    if (A == null || A.length() == 0)
	        return 0;
	    
	    if (A.length() == 1 && A.charAt(0) == '0')
	        return 0;
	    
	    while (dividend.length() > 0 && !dividend.equalsIgnoreCase("2")) {
	        str = new StringBuilder();
	        int carry = 0;
	        int n = dividend.length();
	        
	        if (n > 0) {
    	        int num = dividend.charAt(n - 1) - '0';
    	        
    	        if (num % 2 == 1)
    	            return 0;
	        }
	        
	        for (int i = 0; i < n; i++) {
	            
	            char c = (char) (dividend.charAt(i) - '0');
	            int res = c + 10 * carry;
	            
	            c = (char) (res / 2 + '0');
	            carry = res % 2;
	            
	            str.append(c);
	        }
	        
	        if (str.charAt(0) == '0')
	            str.deleteCharAt(0);
	            
	        dividend = str.toString();
	    }
	    
	    return 1;
	    
	}
	
}
